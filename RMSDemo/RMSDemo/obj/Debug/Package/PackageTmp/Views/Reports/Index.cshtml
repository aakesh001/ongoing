@model RMSDemo.Models.ComapnyDeviceViewModel
@{
    ViewBag.Title = "Index";
    @*<link href="~/css/calendar.css" rel="stylesheet" />*@
}

<div class="col-xs-10 page-col">
    <div class="row">
        <div class="col-xs-12">
            @using (Html.BeginForm("GetLiveDataForReport", "Reports", FormMethod.Post, new { role = "form" }))
            {<h4>Comapny Device Assignment</h4>
            <div class="panel panel-default " style="height:350px">
                <div class="panel-body">
                    <fieldset>
                        <div class="row" role="form">
                            <div class="form-group col-xs-3">
                                @Html.Label("Distributor Name", new { @id = "BodyContentPlaceHolder_Label1", @class = "control-label", @for = "BodyContentPlaceHolder_txtMid" })
                                <select name="Distributor" id="Distributor" class="form-control" onchange="getCompanyList()">
                                    <option value="0">Select Distributor</option>
                                    @foreach (var item in Model.Distributor)
                                    {
                                        <option value="@item.Id">@item.DistributorName</option>
                                    }
                                </select>
                                <span data-val-controltovalidate="BodyContentPlaceHolder_txtMid" data-val-errormessage="Cannot be blank!" data-val-display="Dynamic" data-val-validationgroup="addmodem" id="BodyContentPlaceHolder_rf1" class="text-danger" data-val="true" data-val-evaluationfunction="RequiredFieldValidatorEvaluateIsValid" data-val-initialvalue="" style="display:none;">Cannot be blank!</span>
                            </div>
                            <div class="form-group col-xs-3">
                                @Html.Label("Company Name", new { @id = "BodyContentPlaceHolder_Label2", @class = "control-label", @for = "BodyContentPlaceHolder_txComp" })
                                <select name="Company" id="Company" class="form-control" onchange="getDevice()">
                                    <option value="0">Select Company</option>
                                </select>
                                <span data-val-controltovalidate="BodyContentPlaceHolder_txtMid" data-val-errormessage="Cannot be blank!" data-val-display="Dynamic" data-val-validationgroup="addmodem" id="BodyContentPlaceHolder_rf1" class="text-danger" data-val="true" data-val-evaluationfunction="RequiredFieldValidatorEvaluateIsValid" data-val-initialvalue="" style="display:none;">Cannot be blank!</span>
                            </div>

                            <div class="form-group col-xs-3">
                                <label for="exampleInputEmail1">Device</label>
                                <select name="Assigned" id="Assigned" class="form-control">
                                    <option value="value">Select Option</option>
                                </select>
                            </div>
                            <div class="form-group col-xs-3">
                                <label for="exampleInputEmail1">StartDate</label>
                                @Html.TextBox("StartDate", "", new { @id = "StartDate", @class = "form-control", placeholder = "dd/mm/yyyy", maxlength = "50" })
                            </div>
                            <div class="form-group col-xs-3">
                                <label for="exampleInputEmail1">StartHour</label>
                                <select name="StartHour" id="StartHour" class="form-control">
                                    <option value="value">Select Option</option>
                                    <option value="01:00">01:00</option>
                                    <option value="02:00">02:00</option>
                                    <option value="03:00">03:00</option>
                                    <option value="04:00">04:00</option>
                                    <option value="05:00">05:00</option>
                                    <option value="06:00">06:00</option>
                                    <option value="07:00">07:00</option>
                                    <option value="08:00">08:00</option>
                                    <option value="09:00">09:00</option>
                                    <option value="10:00">10:00</option>
                                    <option value="11:00">11:00</option>
                                    <option value="12:00">12:00</option>
                                    <option value="13:00">13:00</option>
                                    <option value="14:00">14:00</option>
                                    <option value="15:00">15:00</option>
                                    <option value="16:00">16:00</option>
                                    <option value="17:00">17:00</option>
                                    <option value="18:00">18:00</option>
                                    <option value="19:00">19:00</option>
                                    <option value="20:00">20:00</option>
                                    <option value="21:00">21:00</option>
                                    <option value="22:00">22:00</option>
                                    <option value="23:00">23:00</option>
                                    <option value="24:00">24:00</option>
                                </select>
                            </div>
                            <div class="form-group col-xs-3">
                                <label for="exampleInputEmail1">EndDate</label>
                                @Html.TextBox("EndDate", "", new { @id = "EndDate", @class = "form-control", placeholder = "dd/mm/yyyy", maxlength = "50" })
                            </div>
                            <div class="form-group col-xs-3">
                                <label for="exampleInputEmail1">EndHour</label>
                                <select name="EndHour" id="EndHour" class="form-control">
                                    <option value="value">Select Option</option>
                                    <option value="01:00">01:00</option>
                                    <option value="02:00">02:00</option>
                                    <option value="03:00">03:00</option>
                                    <option value="04:00">04:00</option>
                                    <option value="05:00">05:00</option>
                                    <option value="06:00">06:00</option>
                                    <option value="07:00">07:00</option>
                                    <option value="08:00">08:00</option>
                                    <option value="09:00">09:00</option>
                                    <option value="10:00">10:00</option>
                                    <option value="11:00">11:00</option>
                                    <option value="12:00">12:00</option>
                                    <option value="13:00">13:00</option>
                                    <option value="14:00">14:00</option>
                                    <option value="15:00">15:00</option>
                                    <option value="16:00">16:00</option>
                                    <option value="17:00">17:00</option>
                                    <option value="18:00">18:00</option>
                                    <option value="19:00">19:00</option>
                                    <option value="20:00">20:00</option>
                                    <option value="21:00">21:00</option>
                                    <option value="22:00">22:00</option>
                                    <option value="23:00">23:00</option>
                                    <option value="24:00">24:00</option>
                                </select>
                            </div>
                            <div class="form-group col-xs-11">
                                <input type="button" name="ctl00$BodyContentPlaceHolder$btnSave" onclick="SendData()" value="Submit" id="BodyContentPlaceHolder_btnSave" class="btn btn-primary btn-md">
                                <input type="button" name="ctl00$BodyContentPlaceHolder$btnSave" value="Export" onclick="" id="export" class="btn btn-primary btn-md">
                                <input type="button" name="ctl00$BodyContentPlaceHolder$btnSave" value="PDF" onclick="" id="exportpdf" class="btn btn-primary btn-md">
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
            }
        </div>
        <div class="col-xs-12 jqGridPager">
            <table id="grid" class="table"></table>
            <div id="jqGridPager"></div>
        </div>
    </div>
</div>

@section scripts{

    <script src="~/Scripts/CalendarJ.js"></script>
    <script src="~/Scripts/CalendarUi.js"></script>
    <script src="~/Scripts/trirand/i18n/grid.locale-en.js"></script>
    <script src="~/Scripts/trirand/src/jquery.jqGrid.js"></script>
    <script type="text/javascript" language="javascript" src="//cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
    <script type="text/javascript" language="javascript" src="//cdn.rawgit.com/bpampuch/pdfmake/0.1.26/build/pdfmake.min.js">	</script>
    <script type="text/javascript" language="javascript" src="//cdn.rawgit.com/bpampuch/pdfmake/0.1.26/build/vfs_fonts.js"></script>

    <script>
        $(document).ready(function () {
            $('#Distributor').find('option:first').attr('selected', 'selected');
            $(function () {
                $("#StartDate").datepicker({ dateFormat: "dd/mm/yy" });
            });
            $(function () {
                $("#EndDate").datepicker({ dateFormat: "dd/mm/yy" });
            });
        });

        function getCompanyList() {

            var distributorID = $("#Distributor").val();
            $.ajax
                ({
                    url: '/CompanyDevice/GetCompany',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        distID: +distributorID
                    }),
                    success: function (result) {
                        $("#Company").html("");
                        console.log(result);

                        $("#Company").append
                            ($('<option></option>').val('0').html('Select Company'))
                        $.each(result, function (i, city) {
                            $("#Company").append
                                ($('<option></option>').val(city.Id).html(city.CompanyName))
                        })
                    },
                    error: function () {
                        alert("Whooaaa! Something went wrong..")
                    },
                });
        }

        function getDevice() {

            var distributorID = $("#Distributor").val();
            var CompanyId = $("#Company").val();
            if (distributorID != 0) {
                $.ajax
                    ({
                        url: '/Live/GetAssignedDevice',
                        type: 'POST',
                        datatype: 'application/json',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            distID: distributorID,
                            CompanyId: CompanyId

                        }),
                        success: function (result) {
                            $("#Assigned").html("");
                            console.log(result);

                            $("#Assigned").append

                            $.each(result, function (i, city) {
                                $("#Assigned").append
                                    ($('<option></option>').val(city.IMEI).html(city.Name))
                            })
                        },
                        error: function () {
                            alert("Whooaaa! Something went wrong..")
                        },
                    });
            }
        }
        function getAsDate(day, time) {
            var hours = Number(time.match(/^(\d+)/)[1]);
            var minutes = Number(time.match(/:(\d+)/)[1]);

            var sHours = hours.toString();
            var sMinutes = minutes.toString();
            if (hours < 10) sHours = "0" + sHours;
            if (minutes < 10) sMinutes = "0" + sMinutes;
            time = sHours + ":" + sMinutes + ":00";
            var d = new Date(day);

            var n = d.toISOString().substring(0, 10);
            var newDate = new Date(n + "T" + time);
            return newDate;
        }
        function SendData() {
            var DistrinutorName = $('#Distributor').val();
            if (DistrinutorName == '0') {
                return;
            }
            var CompanyName = $('#Company').val();
            if (CompanyName == '0') {
                return;
            }
            var DeviceName = $('#Assigned').val();
            var StartDate = $('#StartDate').val();
            var StartTime = $('#StartHour').val();
            var EndDate = $('#EndDate').val();
            var EndTime = $('#EndHour').val();

            $.ajax
                ({
                    url: '/Reports/GetLiveDataForReport',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        Assigned: DeviceName,
                        StartDate: StartDate,
                        StartHour: StartTime,
                        EndDate: EndDate,
                        EndHour: EndTime

                    }),
                    success: function (result) {
                        BindGrid(result);
                    },
                    error: function () {
                        alert("Whooaaa! Something went wrong..")
                    },
                });
        }

        function BindGrid(result) {
            $("#grid").jqGrid({
                datatype: 'local',
                data: result,
                colModel: [
                    { name: 'device_id', label: 'ID', key: true, editable: true, editoptions: { readonly: "readonly" } },
                    { name: 'last_update', label: 'Date Time', sorttype: 'date', formatter: 'date', formatoptions: { srcformat: "ISO8601Long", newformat: "m/d/Y h:i A" } },
                    { name: 'frequency', label: 'Output Frequency', editable: true },
                    { name: 'dc_bus_voltage', label: 'DC Bus Voltage', editable: true },
                    { name: 'current', label: 'Output Current', editable: true },
                    { name: 'in_power', label: 'Input Power', editable: false },
                    { name: 'output_voltage', label: 'Output voltage', editable: false }

                ], caption: 'Device',
                width: '1000',
                height: 600,
                loadonce: true,
                rowNum: 50,
                viewrecords: true,
                rownumbers: true,
                rowList: [5, 10, 20, 50],
                sortorder: 'asc',
                pager: "#jqGridPager"

            });
            $('#grid').jqGrid('navGrid', '#jqGridPager',
                { edit: false, add: false, del: false, search: false }
            );

            $("#grid").jqGrid('inlineNav', '#jqGridPager',
                {
                    edit: true,
                    editicon: "ui-icon-pencil",
                    add: true,
                    addicon: "ui-icon-plus",
                    save: true,
                    saveicon: "ui-icon-disk",
                    cancel: true,
                    cancelicon: "ui-icon-cancel",

                    editParams: {
                        keys: false,
                        oneditfunc: null,
                        successfunc: function (val) {
                            if (val.responseText != "") {
                                alert(val.responseText);
                                $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                            }
                        },
                        url: null,
                        extraparam: {
                            EmpId: function () {
                                var sel_id = $('#jQGridDemo').jqGrid('getGridParam', 'selrow');
                                var value = $('#jQGridDemo').jqGrid('getCell', sel_id, '_id');
                                return value;
                            }
                        },
                        aftersavefunc: null,
                        errorfunc: null,
                        afterrestorefunc: null,
                        restoreAfterError: true,
                        mtype: "POST"
                    },
                    addParams: {
                        useDefValues: true,
                        addRowParams: {
                            keys: true,
                            extraparam: {},
                            // oneditfunc: function () { alert(); },
                            successfunc: function (val) {
                                if (val.responseText != "") {
                                    alert(val.responseText);
                                    $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                                }
                            }
                        }
                    }
                }
            );
            $("#export").on("click", function () {
                $("#grid").jqGrid("exportToExcel", {
                    includeLabels: true,
                    includeGroupHeader: true,
                    includeFooter: true,
                    fileName: "jqGridExport.xlsx",
                    maxlength: 40 // maxlength for visible string data
                })
            });
            //http://www.guriddo.net/documentation/guriddo/javascript/user-guide/exporting/
            //http://pdfmake.org/#/gettingstarted

            $("#exportpdf").on("click", function () {
                $("#grid").jqGrid("exportToPdf", {
                    title: 'jqGrid Export to PDF',
                    orientation: 'landscape',
                    pageSize: 'A4',
                    description: 'description of the exported document',
                    customSettings: null,
                    download: 'download',
                    includeLabels: true,
                    includeGroupHeader: true,
                    includeFooter: true,
                    fileName: "RegisteredDevices.pdf",
                    onBeforeExport: function (doc) {
                        doc.styles.tableBody.fontSize = 8;
                        doc.styles.tableBody.fontSize = 8;
                        doc.width = '1000';

                    }
                })
            });
        };
    </script>

}