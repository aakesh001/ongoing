@model RMSDemo.Models.ComapnyDeviceViewModel
@using Entities;
@{
    ViewBag.Title = "Company Devices Assignment";
}

<div class="col-xs-10 page-col">
    <div class="row">
        <div class="col-xs-12">
            @using (Html.BeginForm("Index", "CompanyDevice", FormMethod.Post, new { role = "form" }))
            {<h4>Comapny Device Assignment</h4>
            <div class="panel panel-default ">
                <div class="panel-body">
                    <fieldset>
                        <div class="row" role="form">
                            <div class="form-group col-xs-3">
                                @Html.Label("Distributor Name", new { @id = "BodyContentPlaceHolder_Label1", @class = "control-label", @for = "BodyContentPlaceHolder_txtMid" })
                                <select name="Distributor" id="Distributor" class="form-control" onchange="getCompanyList()">
                                    <option value="0">Select Distributor</option>
                                    @foreach (var item in Model.Distributor)
                                    {
                                        <option value="@item.Id">@item.DistributorName</option>
                                    }
                                </select>
                                <span data-val-controltovalidate="BodyContentPlaceHolder_txtMid" data-val-errormessage="Cannot be blank!" data-val-display="Dynamic" data-val-validationgroup="addmodem" id="BodyContentPlaceHolder_rf1" class="text-danger" data-val="true" data-val-evaluationfunction="RequiredFieldValidatorEvaluateIsValid" data-val-initialvalue="" style="display:none;">Cannot be blank!</span>
                            </div>
                            <div class="form-group col-xs-3">
                                @Html.Label("Company Name", new { @id = "BodyContentPlaceHolder_Label2", @class = "control-label", @for = "BodyContentPlaceHolder_txComp" })
                                <select name="Company" id="Company" class="form-control" onchange="getDevice()">
                                    <option value="0">Select Company</option>
                                </select>
                                <span data-val-controltovalidate="BodyContentPlaceHolder_txtMid" data-val-errormessage="Cannot be blank!" data-val-display="Dynamic" data-val-validationgroup="addmodem" id="BodyContentPlaceHolder_rf1" class="text-danger" data-val="true" data-val-evaluationfunction="RequiredFieldValidatorEvaluateIsValid" data-val-initialvalue="" style="display:none;">Cannot be blank!</span>
                            </div>

                            <div class="col-xs-6">
                                <div class="row multiplaeValues">
                                    <div class="col-xs-5">
                                        @Html.Label("Assigned device", new { @id = "BodyContentPlaceHolder_Label1", @for = "BodyContentPlaceHolder_txtMid" })
                                        <select name="Assigned" id="Assigned" multiple="multiple" size="8" class="multiselect form-control"></select>
                                    </div>

                                    <div class="col-xs-2">
                                        <label>&nbsp;</label>
                                        <button type="button" id="ShiftRight" class="btn btn-block btn-primary"><i class="glyphicon glyphicon-forward"></i></button>
                                        @*<button type="button" id="right_Selected_1" class="btn btn-block btn-primary"><i class="glyphicon glyphicon-chevron-right"></i></button>
                                            <button type="button" id="left_Selected_1" class="btn btn-block btn-primary"><i class="glyphicon glyphicon-chevron-left"></i></button>*@
                                        <button type="button" id="ShiftLeft" class="btn btn-block btn-primary"><i class="glyphicon glyphicon-backward"></i></button>
                                    </div>

                                    <div class="col-xs-5">
                                        @Html.Label("UnAssigned device", new { @id = "BodyContentPlaceHolder_Label1", @class = "control-label", @for = "BodyContentPlaceHolder_txtMid" })
                                        <select name="UnAssigned" id="UnAssigned" name="to[]" multiple="multiple" size="8" class="form-control"></select>
                                    </div>
                                </div>
                            </div>
                            @*<div class="form-group col-xs-3">
                                    @Html.Label("Assigned device", new { @id = "BodyContentPlaceHolder_Label1", @class = "control-label", @for = "BodyContentPlaceHolder_txtMid" })
                                    <select name="Assigned" id="Assigned" multiple="multiple" class="form-control"></select>
                                </div>
                                <div class="form-group col-xs-3">
                                    <input id="ShiftRight" type="button" class="form-control" value=">>" />
                                </div>
                                <div class="form-group col-xs-3">
                                    <input id="ShiftLeft" type="button" class="form-control" value="<<" />
                                </div>
                                <div class="form-group col-xs-3">
                                    @Html.Label("UnAssigned device", new { @id = "BodyContentPlaceHolder_Label1", @class = "control-label", @for = "BodyContentPlaceHolder_txtMid" })
                                    <select name="UnAssigned" id="UnAssigned" multiple="multiple" class="form-control"></select>
                                </div>*@
                            <div class="form-group col-xs-11">
                                <input type="button" name="ctl00$BodyContentPlaceHolder$btnSave" value="AddDevice" onclick="SendData()" id="BodyContentPlaceHolder_btnSave" class="btn btn-primary btn-md">
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
            }
        </div>
        <div class="col-xs-12 jqGridPager">
            <table id="grid" class="table"></table>
            <div id="jqGridPager"></div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#Distributor').find('option:first').attr('selected', 'selected');

        });
        function getCompanyList() {

            var distributorID = $("#Distributor").val();
            $.ajax
                ({
                    url: '/CompanyDevice/GetCompany',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        distID: +distributorID
                    }),
                    success: function (result) {
                        $("#Company").html("");
                        console.log(result);
                        $("#Company").append
                            ($('<option></option>').val('0').html('Select Company'))
                        $.each(result, function (i, city) {
                            $("#Company").append
                                ($('<option></option>').val(city.Id).html(city.CompanyName))
                        })
                    },
                    error: function () {
                        alert("Whooaaa! Something went wrong..")
                    },
                });
        }

        function getDevice() {

            var distributorID = $("#Distributor").val();
            $.ajax
                ({
                    url: '/CompanyDevice/GetUnAssignedDevice',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        distID: +distributorID
                    }),
                    success: function (result) {
                        $("#UnAssigned").html("");
                        console.log(result.length);
                        if (result.length == 0) {
                            alert("No UnAssignedDevice");
                        }
                        $("#UnAssigned").append

                        $.each(result, function (i, city) {
                            $("#UnAssigned").append
                                ($('<option></option>').val(city.Id).html(city.Name))
                        })
                    },
                    error: function () {
                        alert("Whooaaa! Something went wrong..")
                    },
                });
        }
        $(function () {
            $("#ShiftRight,#ShiftLeft").click(function (event) {
                var ID = $(event.target).attr("ID");
                var ChooseFrom = ID == "ShiftRight" ? "#Assigned" : "#UnAssigned";
                var moveTo = ID == "ShiftRight" ? "#UnAssigned" : "#Assigned";

                var SelectData = $(ChooseFrom + " :selected").toArray();
                $(moveTo).append(SelectData);
                SelectData.remove;
            });
        });

        function SendData() {
            var DistrinutorName = $('#Distributor').val();
            if (DistrinutorName == '0') {
                return;
            }
            var CompanyName = $('#Company').val();
            if (CompanyName == '0') {
                return;
            }
            var values = new Array();
            var arr = new Array();
            var selected = $('#Assigned option');
            selected.each(function () {
                values.push($(this).val());
                //values += $(this).html() + " " + $(this).val() + "\n";
            });
            console.log(values);
            $.ajax
                ({
                    url: '/CompanyDevice/UpdateCompanyDevice',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        assignedValues: values,
                        DisttributorName: DistrinutorName,
                        CompName: CompanyName

                    }),
                    success: function (result) {

                    },
                    error: function () {
                        alert("Whooaaa! Something went wrong..")
                    },
                });
        }
    </script>

}